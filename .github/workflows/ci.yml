    name: ci

    on:
      push:
        branches: [main]

    jobs:
      build:
        runs-on: windows-2022
        steps:
          - name: Checkout repository
            uses: actions/checkout@v4

          - name: Set up Python
            uses: actions/setup-python@v4
            with:
              python-version: '3.11'

          - name: Install dependencies
            run: |
              python -m pip install --upgrade pip
              pip install -r requirements.lock

          - name: Build executable
            run: |
              pyinstaller --onefile --name ml_app src/ui.py

          - name: Debug CERT_PFX secret
            shell: pwsh
            run: |
              if (-not $Env:CERT_PFX) {
                Write-Host "CERT_PFX is not set"
                exit 1
              }
              $length = $Env:CERT_PFX.Length
              Write-Host "CERT_PFX length: $length"
              if ($length -lt 100) {
                Write-Host "CERT_PFX seems too short, please check the secret"
                exit 1
              }
              Write-Host "CERT_PFX appears to be set correctly."

          - name: Decode certificate
            id: decode_cert
            shell: bash
            run: |
              echo "$CERT_PFX" | base64 -d > code_sign.pfx
            env:
              CERT_PFX: ${{ secrets.CERT_PFX }}

          - name: List code_sign.pfx and its size
            shell: pwsh
            run: |
              Write-Host "Content of working dir:"
              Get-ChildItem -Recurse .
              Write-Host "PFX file info:"
              Get-Item code_sign.pfx | Format-List *

          - name: Sign executable
            shell: pwsh
            if: ${{ env.CERT_PFX != '' }}
            run: |
              $signtool = "C:\Program Files (x86)\Microsoft SDKs\ClickOnce\SignTool\signtool.exe"
              & $signtool sign /f code_sign.pfx /p $Env:CERT_PASS /tr http://timestamp.digicert.com /td sha256 /fd sha256 dist\ml_app.exe
            env:
              CERT_PASS: ${{ secrets.CERT_PASS }}

          - name: Upload artifact
            uses: actions/upload-artifact@v4
            with:
              name: ml_app
              path: dist/ml_app.exe

          - name: Build Docker image
            run: docker build -t ml-app:latest .

          - name: Scan image with Trivy
            uses: aquasecurity/trivy-action@0.32.0
            with:
              image-ref: ml-app:latest
              format: table
              exit-code: '1'

          - name: Clean up certificate
            if: always()
            run: rm code_sign.pfx